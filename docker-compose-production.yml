version: "3.9"

services:

  postgres:
    image: ${REGISTRY}/url-shortener-postgres:${IMAGE_TAG}
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB: ${POSTGRES_DB}
    secrets:
      - postgres_password
    networks:
      - url-shortener-net
    deploy:
      placement:
        constraints: [ node.role == manager ]
      endpoint_mode: dnsrr

  url-shortener:
    image: ${REGISTRY}/url-shortener:${IMAGE_TAG}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB: ${POSTGRES_DB}
      URL_SHORTENER_STORE: pg
    secrets:
      - postgres_password
    networks:
      - url-shortener-net
      - traefik-public
    deploy:
      placement:
        constraints: [ node.role == manager ]
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.http.routers.url-shortener.rule=Host(`url.svodd.ru`)
        - traefik.http.services.url-shortener.loadBalancer.server.port=8000
        - traefik.http.routers.url-shortener.entryPoints=https
        - traefik.http.routers.url-shortener.tls=true
        - traefik.http.routers.url-shortener.tls.certResolver=letsEncrypt

  postgres-backup:
    image: ${REGISTRY}/url-shortener-postgres-backup:${IMAGE_TAG}
    environment:
      BACKUP_NAME: url-shortener_postgres
      POSTGRES_HOST: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB: ${POSTGRES_DB}
      AWS_ACCESS_KEY_ID: ${BACKUP_AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY_FILE: /run/secrets/backup_aws_secret_access_key
      AWS_DEFAULT_REGION: ru-1
      S3_ENDPOINT: ${BACKUP_S3_ENDPOINT}
      S3_BUCKET: ${BACKUP_S3_BUCKET}
    secrets:
      - postgres_password
      - backup_aws_secret_access_key
    command: sh -c 'wait-for-it postgres:5432 -t 60 && backup'
    networks:
      - url-shortener-net
    deploy:
      labels:
        - swarm.cronjob.enable=true
        - swarm.cronjob.schedule=54 */1 * * *
        - swarm.cronjob.skip-running=true
      placement:
        constraints: [ node.labels.worker == worker-1 ]
      replicas: 0
      restart_policy:
        condition: none

secrets:
  postgres_password:
    file: ${POSTGRES_PASSWORD_FILE}
  backup_aws_secret_access_key:
    file: ${BACKUP_AWS_ACCESS_KEY_FILE}

volumes:
  postgres:

networks:
  traefik-public:
    external: true
  url-shortener-net:
